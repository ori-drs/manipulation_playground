<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- Switch ID -->
  <arg name="switch_ID" default="0"/>

  <!-- Pose for Spawn -->
  <arg name="x" default="1.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="1.0"/>
  <arg name="R" default="0.0"/>
  <arg name="P" default="-1.5707"/>
  <arg name="Y" default="0.0"/>

  <group ns="switch">
    <group ns="$(arg switch_ID)">

      <!-- Load switch description file -->
      <param name="robot_description" command="$(find xacro)/xacro '$(find manipulation_playground_articulated_devices)/devices/switch/model/switch.urdf.xacro'"/>
      <param name="tf_prefix" value="switch/$(arg switch_ID)" />

      <!-- Spawn switch -->
      <node name="switch_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
      args="-urdf -param robot_description -model switch -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Y) -P $(arg P) -R $(arg R)"/>

      <!-- State publisher -->
      <node name="switch_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
        <param name="publish_frequency" value="100.0"/>
      </node>

      <!-- Controllers -->
      <rosparam file="$(find manipulation_playground_articulated_devices)/devices/switch/controllers/switch_controllers.yaml" command="load"/>
      
      <node name="switch_controllers_spawner" pkg="controller_manager" type="controller_manager"
      args="spawn switch_joint_state_controller switch_controller" respawn="false" output="screen"/>

      <!-- Actuation node -->
      <node pkg="manipulation_playground_articulated_devices" name="switch_actuation_node" type="switch_actuation_node.py" output="screen"/>

      <!-- Transform broadcaster -->
      <node pkg="tf2_ros" type="static_transform_publisher" name="switch_broadcaster" args="$(arg x) $(arg y) $(arg z) $(arg Y) $(arg P) $(arg R) odom switch/$(arg switch_ID)/world"/>
    </group>
  </group>

</launch>
